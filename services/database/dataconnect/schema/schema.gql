# BiteBase Intelligence Schema - Restaurant Intelligence Platform

# User table is keyed by Firebase Auth UID
type User @table {
  id: String! @default(expr: "auth.uid")
  email: String! @col(dataType: "varchar(255)")
  username: String! @col(dataType: "varchar(50)")
  firstName: String @col(dataType: "varchar(50)")
  lastName: String @col(dataType: "varchar(50)")
  role: String! @default(expr: "'USER'") @col(dataType: "varchar(20)")
  status: String! @default(expr: "'ACTIVE'") @col(dataType: "varchar(20)")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
  lastLoginAt: Timestamp
  profileImageUrl: String
  phoneNumber: String @col(dataType: "varchar(20)")
  preferences: String @col(dataType: "jsonb")
}

# Restaurant data with comprehensive location and business information
type Restaurant @table {
  id: UUID! @default(expr: "uuidV4()")
  name: String! @col(dataType: "varchar(255)")
  description: String @col(dataType: "text")
  cuisineType: String @col(dataType: "varchar(100)")
  priceRange: String @col(dataType: "varchar(10)")

  # Location information
  address: String! @col(dataType: "varchar(500)")
  city: String! @col(dataType: "varchar(100)")
  state: String! @col(dataType: "varchar(50)")
  zipCode: String! @col(dataType: "varchar(20)")
  country: String! @default(expr: "'US'") @col(dataType: "varchar(50)")
  latitude: Float!
  longitude: Float!

  # Business information
  phoneNumber: String @col(dataType: "varchar(20)")
  website: String @col(dataType: "varchar(255)")
  email: String @col(dataType: "varchar(255)")

  # Ratings and reviews
  rating: Float @default(expr: "0.0")
  reviewCount: Int @default(expr: "0")

  # Business hours and status
  isOpen: Boolean @default(expr: "true")
  businessHours: String @col(dataType: "jsonb")

  # Metadata
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
  verifiedAt: Timestamp
  imageUrls: String @col(dataType: "jsonb")
  tags: String @col(dataType: "jsonb")

  # External IDs for data integration
  googlePlaceId: String @col(dataType: "varchar(255)")
  yelpId: String @col(dataType: "varchar(255)")
  foursquareId: String @col(dataType: "varchar(255)")
}

# Location analysis results for market intelligence
type LocationAnalysis @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!

  # Location data
  latitude: Float!
  longitude: Float!
  address: String @col(dataType: "varchar(500)")
  city: String @col(dataType: "varchar(100)")
  state: String @col(dataType: "varchar(50)")
  zipCode: String @col(dataType: "varchar(20)")

  # Analysis parameters
  radius: Float! @default(expr: "1.0") # in miles
  analysisType: String! @col(dataType: "varchar(50)")

  # Analysis results
  competitorCount: Int @default(expr: "0")
  averageRating: Float
  averagePriceRange: String @col(dataType: "varchar(10)")
  dominantCuisines: String @col(dataType: "jsonb")
  marketSaturation: Float
  opportunityScore: Float

  # Demographics and market data
  populationDensity: Float
  medianIncome: Float
  ageDistribution: String @col(dataType: "jsonb")
  footTraffic: String @col(dataType: "jsonb")

  # Analysis metadata
  confidence: Float @default(expr: "0.0")
  dataQuality: String @col(dataType: "varchar(20)")
  analysisDate: Timestamp! @default(expr: "request.time")
  expiresAt: Timestamp

  # Raw data and insights
  rawData: String @col(dataType: "jsonb")
  insights: String @col(dataType: "jsonb")
  recommendations: String @col(dataType: "jsonb")
}

# Market reports generated by AI agent
type MarketReport @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!

  # Report metadata
  title: String! @col(dataType: "varchar(255)")
  query: String! @col(dataType: "text")
  status: String! @default(expr: "'PENDING'") @col(dataType: "varchar(20)")
  reportType: String! @col(dataType: "varchar(50)")

  # Location context
  targetLocation: String @col(dataType: "varchar(255)")
  analysisRadius: Float
  coordinates: String @col(dataType: "jsonb")

  # Report content
  executiveSummary: String @col(dataType: "text")
  marketAnalysis: String @col(dataType: "jsonb")
  competitorAnalysis: String @col(dataType: "jsonb")
  demographicAnalysis: String @col(dataType: "jsonb")
  recommendations: String @col(dataType: "jsonb")
  riskAssessment: String @col(dataType: "jsonb")

  # Report metrics
  confidence: Float @default(expr: "0.0")
  dataQuality: String @col(dataType: "varchar(20)")
  processingTime: Float

  # Timestamps
  createdAt: Timestamp! @default(expr: "request.time")
  completedAt: Timestamp
  expiresAt: Timestamp

  # Export and sharing
  exportUrls: String @col(dataType: "jsonb")
  isPublic: Boolean @default(expr: "false")
  shareToken: String @col(dataType: "varchar(255)")
}
# Restaurant reviews and ratings
type RestaurantReview @table {
  id: UUID! @default(expr: "uuidV4()")
  restaurant: Restaurant!
  user: User!

  # Review content
  rating: Int! # 1-5 stars
  title: String @col(dataType: "varchar(255)")
  reviewText: String @col(dataType: "text")

  # Review metadata
  isVerified: Boolean @default(expr: "false")
  helpfulCount: Int @default(expr: "0")
  reportCount: Int @default(expr: "0")

  # Visit information
  visitDate: Date
  visitType: String @col(dataType: "varchar(50)") # dine-in, takeout, delivery
  partySize: Int

  # Review source and moderation
  source: String @default(expr: "'BITEBASE'") @col(dataType: "varchar(50)")
  moderationStatus: String @default(expr: "'PENDING'") @col(dataType: "varchar(20)")
  moderatedAt: Timestamp
  moderatedBy: String @col(dataType: "varchar(255)")

  # Timestamps
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")

  # Media attachments
  imageUrls: String @col(dataType: "jsonb")
  videoUrls: String @col(dataType: "jsonb")
}

# Restaurant analytics and performance metrics
type RestaurantAnalytics @table {
  id: UUID! @default(expr: "uuidV4()")
  restaurant: Restaurant!

  # Time period for analytics
  periodStart: Date!
  periodEnd: Date!
  periodType: String! @col(dataType: "varchar(20)") # daily, weekly, monthly, yearly

  # Performance metrics
  viewCount: Int @default(expr: "0")
  clickCount: Int @default(expr: "0")
  callCount: Int @default(expr: "0")
  directionCount: Int @default(expr: "0")
  websiteClickCount: Int @default(expr: "0")

  # Review metrics
  newReviewCount: Int @default(expr: "0")
  averageRating: Float
  ratingDistribution: String @col(dataType: "jsonb")

  # Engagement metrics
  shareCount: Int @default(expr: "0")
  saveCount: Int @default(expr: "0")
  photoViewCount: Int @default(expr: "0")

  # Search and discovery
  searchImpressions: Int @default(expr: "0")
  searchClicks: Int @default(expr: "0")
  searchPosition: Float

  # Competitive metrics
  marketShare: Float
  competitorComparison: String @col(dataType: "jsonb")

  # Timestamps
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
}

# User sessions and activity tracking
type UserSession @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!

  # Session information
  sessionToken: String! @col(dataType: "varchar(255)")
  ipAddress: String @col(dataType: "varchar(45)")
  userAgent: String @col(dataType: "text")

  # Location and device
  country: String @col(dataType: "varchar(50)")
  city: String @col(dataType: "varchar(100)")
  deviceType: String @col(dataType: "varchar(50)")
  browserName: String @col(dataType: "varchar(100)")

  # Session activity
  pageViews: Int @default(expr: "0")
  searchQueries: Int @default(expr: "0")
  reportsGenerated: Int @default(expr: "0")
  locationsAnalyzed: Int @default(expr: "0")

  # Session timing
  startedAt: Timestamp! @default(expr: "request.time")
  lastActivityAt: Timestamp! @default(expr: "request.time")
  endedAt: Timestamp
  duration: Int # in seconds

  # Session status
  isActive: Boolean @default(expr: "true")
  endReason: String @col(dataType: "varchar(50)")
}
